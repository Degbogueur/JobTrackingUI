
<div class="@SizeClass">
    <span class="star"
          @onclick="() => SetRating(1)"
          @onmouseover="() => SetHoverRating(1)"
          @onmouseleave="() => ResetHoverRating()">
        <i class="bi @GetStarClass(1)"></i>
    </span>
    <span class="star"
          @onclick="() => SetRating(2)"
          @onmouseover="() => SetHoverRating(2)"
          @onmouseleave="() => ResetHoverRating()">
        <i class="bi @GetStarClass(2)"></i>
    </span>
    <span class="star"
          @onclick="() => SetRating(3)"
          @onmouseover="() => SetHoverRating(3)"
          @onmouseleave="() => ResetHoverRating()">
        <i class="bi @GetStarClass(3)"></i>
    </span>
    <span class="star"
          @onclick="() => SetRating(4)"
          @onmouseover="() => SetHoverRating(4)"
          @onmouseleave="() => ResetHoverRating()">
        <i class="bi @GetStarClass(4)"></i>
    </span>
    <span class="star"
          @onclick="() => SetRating(5)"
          @onmouseover="() => SetHoverRating(5)"
          @onmouseleave="() => ResetHoverRating()">
        <i class="bi @GetStarClass(5)"></i>
    </span>
</div>

<style>
    .rating {
        font-size: 2rem;
    }

    .rating-sm {
        font-size: 1rem;
    }

    .star {
        cursor: pointer;
        margin-right: 5px;
    }

    .rating-sm .star {
        cursor: auto;
        margin-right: 0px !important;
    }
</style>

@code {
    [Parameter] public int MaxRating { get; set; } = 5;
    [Parameter] public int CurrentRating { get; set; }
    [Parameter] public EventCallback<int> CurrentRatingChanged { get; set; }
    [Parameter] public bool IsReadOnly { get; set; } = false;
    [Parameter] public string SizeClass { get; set; } = "rating";

    private int HoverRating { get; set; } = 0;

    private void SetRating(int rating)
    {
        if (!IsReadOnly)
        {
            CurrentRating = rating;
            CurrentRatingChanged.InvokeAsync(CurrentRating);
        }
    }

    private void SetHoverRating(int rating)
    {
        if (!IsReadOnly)
            HoverRating = rating;
    }

    private void ResetHoverRating()
    {
        if (!IsReadOnly)
            HoverRating = 0;
    }

    private string GetStarClass(int i)
    {
        if (HoverRating >= i)
            return "bi-star-fill text-warning";
        else if (CurrentRating >= i)
            return "bi-star-fill text-warning";
        else
            return "bi-star text-muted";
    }
}